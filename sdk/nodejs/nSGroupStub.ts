// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class NSGroupStub extends pulumi.CustomResource {
    /**
     * Get an existing NSGroupStub resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NSGroupStubState, opts?: pulumi.CustomResourceOptions): NSGroupStub {
        return new NSGroupStub(name, <any>state, { ...opts, id: id });
    }

    /**
     * Comment field
     */
    public readonly comment: pulumi.Output<string | undefined>;
    /**
     * The name of the name server group
     */
    public readonly name: pulumi.Output<string>;
    /**
     * The grid primary servers for this zone.
     */
    public readonly stubMembers: pulumi.Output<{ enablePreferredPrimaries?: boolean, gridReplicate?: boolean, lead?: boolean, name: string, preferredPrimaries?: { address: string, name: string, sharedWithMsParentDelegation: boolean, stealth?: boolean, tsigKey?: string, tsigKeyAlg?: string, tsigKeyName?: string, useTsigKeyName?: boolean }[], stealth?: boolean }[]>;

    /**
     * Create a NSGroupStub resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NSGroupStubArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NSGroupStubArgs | NSGroupStubState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state: NSGroupStubState = argsOrState as NSGroupStubState | undefined;
            inputs["comment"] = state ? state.comment : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["stubMembers"] = state ? state.stubMembers : undefined;
        } else {
            const args = argsOrState as NSGroupStubArgs | undefined;
            if (!args || args.stubMembers === undefined) {
                throw new Error("Missing required property 'stubMembers'");
            }
            inputs["comment"] = args ? args.comment : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["stubMembers"] = args ? args.stubMembers : undefined;
        }
        super("infoblox:index/nSGroupStub:NSGroupStub", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NSGroupStub resources.
 */
export interface NSGroupStubState {
    /**
     * Comment field
     */
    readonly comment?: pulumi.Input<string>;
    /**
     * The name of the name server group
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The grid primary servers for this zone.
     */
    readonly stubMembers?: pulumi.Input<pulumi.Input<{ enablePreferredPrimaries?: pulumi.Input<boolean>, gridReplicate?: pulumi.Input<boolean>, lead?: pulumi.Input<boolean>, name: pulumi.Input<string>, preferredPrimaries?: pulumi.Input<pulumi.Input<{ address: pulumi.Input<string>, name: pulumi.Input<string>, sharedWithMsParentDelegation?: pulumi.Input<boolean>, stealth?: pulumi.Input<boolean>, tsigKey?: pulumi.Input<string>, tsigKeyAlg?: pulumi.Input<string>, tsigKeyName?: pulumi.Input<string>, useTsigKeyName?: pulumi.Input<boolean> }>[]>, stealth?: pulumi.Input<boolean> }>[]>;
}

/**
 * The set of arguments for constructing a NSGroupStub resource.
 */
export interface NSGroupStubArgs {
    /**
     * Comment field
     */
    readonly comment?: pulumi.Input<string>;
    /**
     * The name of the name server group
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The grid primary servers for this zone.
     */
    readonly stubMembers: pulumi.Input<pulumi.Input<{ enablePreferredPrimaries?: pulumi.Input<boolean>, gridReplicate?: pulumi.Input<boolean>, lead?: pulumi.Input<boolean>, name: pulumi.Input<string>, preferredPrimaries?: pulumi.Input<pulumi.Input<{ address: pulumi.Input<string>, name: pulumi.Input<string>, sharedWithMsParentDelegation?: pulumi.Input<boolean>, stealth?: pulumi.Input<boolean>, tsigKey?: pulumi.Input<string>, tsigKeyAlg?: pulumi.Input<string>, tsigKeyName?: pulumi.Input<string>, useTsigKeyName?: pulumi.Input<boolean> }>[]>, stealth?: pulumi.Input<boolean> }>[]>;
}
