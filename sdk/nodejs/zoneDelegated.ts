// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ZoneDelegated extends pulumi.CustomResource {
    /**
     * Get an existing ZoneDelegated resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ZoneDelegatedState, opts?: pulumi.CustomResourceOptions): ZoneDelegated {
        return new ZoneDelegated(name, <any>state, { ...opts, id: id });
    }

    /**
     * Comment for the zone; maximum 256 characters
     */
    public readonly comment: pulumi.Output<string | undefined>;
    /**
     * The primary preference list with Grid member names and/or External Server structs for this member.
     */
    public readonly delegateTos: pulumi.Output<{ address: string, name: string, sharedWithMsParentDelegation: boolean, stealth?: boolean, tsigKey?: string, tsigKeyAlg?: string, tsigKeyName?: string, useTsigKeyName?: boolean }[]>;
    /**
     * a TTL for the delegated zone
     */
    public readonly delegatedTtl: pulumi.Output<number | undefined>;
    /**
     * Is the zone disabled
     */
    public readonly disable: pulumi.Output<boolean | undefined>;
    /**
     * The FQDN for the zone that is being delegated
     */
    public readonly fqdn: pulumi.Output<string>;
    /**
     * Is the record locked to prevent changes
     */
    public readonly locked: pulumi.Output<boolean | undefined>;
    /**
     * NameServer group for this zone
     */
    public readonly nsGroup: pulumi.Output<string | undefined>;
    public /*out*/ readonly reference: pulumi.Output<string>;
    /**
     * Should we use the deletated ttl
     */
    public readonly useDelegatedTtl: pulumi.Output<boolean | undefined>;
    /**
     * The name of the DNS view in which the zone resides
     */
    public readonly view: pulumi.Output<string>;
    /**
     * Format of the zone, default is FORWARD
     */
    public readonly zoneFormat: pulumi.Output<string | undefined>;

    /**
     * Create a ZoneDelegated resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ZoneDelegatedArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ZoneDelegatedArgs | ZoneDelegatedState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state: ZoneDelegatedState = argsOrState as ZoneDelegatedState | undefined;
            inputs["comment"] = state ? state.comment : undefined;
            inputs["delegateTos"] = state ? state.delegateTos : undefined;
            inputs["delegatedTtl"] = state ? state.delegatedTtl : undefined;
            inputs["disable"] = state ? state.disable : undefined;
            inputs["fqdn"] = state ? state.fqdn : undefined;
            inputs["locked"] = state ? state.locked : undefined;
            inputs["nsGroup"] = state ? state.nsGroup : undefined;
            inputs["reference"] = state ? state.reference : undefined;
            inputs["useDelegatedTtl"] = state ? state.useDelegatedTtl : undefined;
            inputs["view"] = state ? state.view : undefined;
            inputs["zoneFormat"] = state ? state.zoneFormat : undefined;
        } else {
            const args = argsOrState as ZoneDelegatedArgs | undefined;
            if (!args || args.delegateTos === undefined) {
                throw new Error("Missing required property 'delegateTos'");
            }
            if (!args || args.fqdn === undefined) {
                throw new Error("Missing required property 'fqdn'");
            }
            inputs["comment"] = args ? args.comment : undefined;
            inputs["delegateTos"] = args ? args.delegateTos : undefined;
            inputs["delegatedTtl"] = args ? args.delegatedTtl : undefined;
            inputs["disable"] = args ? args.disable : undefined;
            inputs["fqdn"] = args ? args.fqdn : undefined;
            inputs["locked"] = args ? args.locked : undefined;
            inputs["nsGroup"] = args ? args.nsGroup : undefined;
            inputs["useDelegatedTtl"] = args ? args.useDelegatedTtl : undefined;
            inputs["view"] = args ? args.view : undefined;
            inputs["zoneFormat"] = args ? args.zoneFormat : undefined;
            inputs["reference"] = undefined /*out*/;
        }
        super("infoblox:index/zoneDelegated:ZoneDelegated", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ZoneDelegated resources.
 */
export interface ZoneDelegatedState {
    /**
     * Comment for the zone; maximum 256 characters
     */
    readonly comment?: pulumi.Input<string>;
    /**
     * The primary preference list with Grid member names and/or External Server structs for this member.
     */
    readonly delegateTos?: pulumi.Input<pulumi.Input<{ address: pulumi.Input<string>, name: pulumi.Input<string>, sharedWithMsParentDelegation?: pulumi.Input<boolean>, stealth?: pulumi.Input<boolean>, tsigKey?: pulumi.Input<string>, tsigKeyAlg?: pulumi.Input<string>, tsigKeyName?: pulumi.Input<string>, useTsigKeyName?: pulumi.Input<boolean> }>[]>;
    /**
     * a TTL for the delegated zone
     */
    readonly delegatedTtl?: pulumi.Input<number>;
    /**
     * Is the zone disabled
     */
    readonly disable?: pulumi.Input<boolean>;
    /**
     * The FQDN for the zone that is being delegated
     */
    readonly fqdn?: pulumi.Input<string>;
    /**
     * Is the record locked to prevent changes
     */
    readonly locked?: pulumi.Input<boolean>;
    /**
     * NameServer group for this zone
     */
    readonly nsGroup?: pulumi.Input<string>;
    readonly reference?: pulumi.Input<string>;
    /**
     * Should we use the deletated ttl
     */
    readonly useDelegatedTtl?: pulumi.Input<boolean>;
    /**
     * The name of the DNS view in which the zone resides
     */
    readonly view?: pulumi.Input<string>;
    /**
     * Format of the zone, default is FORWARD
     */
    readonly zoneFormat?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ZoneDelegated resource.
 */
export interface ZoneDelegatedArgs {
    /**
     * Comment for the zone; maximum 256 characters
     */
    readonly comment?: pulumi.Input<string>;
    /**
     * The primary preference list with Grid member names and/or External Server structs for this member.
     */
    readonly delegateTos: pulumi.Input<pulumi.Input<{ address: pulumi.Input<string>, name: pulumi.Input<string>, sharedWithMsParentDelegation?: pulumi.Input<boolean>, stealth?: pulumi.Input<boolean>, tsigKey?: pulumi.Input<string>, tsigKeyAlg?: pulumi.Input<string>, tsigKeyName?: pulumi.Input<string>, useTsigKeyName?: pulumi.Input<boolean> }>[]>;
    /**
     * a TTL for the delegated zone
     */
    readonly delegatedTtl?: pulumi.Input<number>;
    /**
     * Is the zone disabled
     */
    readonly disable?: pulumi.Input<boolean>;
    /**
     * The FQDN for the zone that is being delegated
     */
    readonly fqdn: pulumi.Input<string>;
    /**
     * Is the record locked to prevent changes
     */
    readonly locked?: pulumi.Input<boolean>;
    /**
     * NameServer group for this zone
     */
    readonly nsGroup?: pulumi.Input<string>;
    /**
     * Should we use the deletated ttl
     */
    readonly useDelegatedTtl?: pulumi.Input<boolean>;
    /**
     * The name of the DNS view in which the zone resides
     */
    readonly view?: pulumi.Input<string>;
    /**
     * Format of the zone, default is FORWARD
     */
    readonly zoneFormat?: pulumi.Input<string>;
}
