// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class MXRecord extends pulumi.CustomResource {
    /**
     * Get an existing MXRecord resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MXRecordState, opts?: pulumi.CustomResourceOptions): MXRecord {
        return new MXRecord(name, <any>state, { ...opts, id: id });
    }

    /**
     * A comment on the record
     */
    public readonly comment: pulumi.Output<string | undefined>;
    /**
     * The GSS-TSIG principal that owns this record
     */
    public readonly ddnsPrincipal: pulumi.Output<string | undefined>;
    /**
     * Determines if the DDNS updates for this record are allowed or not
     */
    public readonly ddnsProtected: pulumi.Output<boolean | undefined>;
    /**
     * Is the record disabled
     */
    public readonly disable: pulumi.Output<boolean | undefined>;
    /**
     * Mail exchanger name in FQDN format. This value can be in unicode format
     */
    public readonly mailExchanger: pulumi.Output<string>;
    /**
     * Name of the zone the MX record refers to
     */
    public readonly name: pulumi.Output<string>;
    /**
     * Preference value, 0 to 65535 (inclusive) in 32-bit unsigned integer format
     */
    public readonly preference: pulumi.Output<number>;
    /**
     * The Time To Live value for record. A 32-bit unsigned integer that represents the duration, in seconds, for which the
     * record is valid
     */
    public readonly ttl: pulumi.Output<number | undefined>;
    /**
     * Use flag for: ttl
     */
    public readonly useTtl: pulumi.Output<boolean | undefined>;
    /**
     * The name of the DNS view in which the record resides.
     */
    public readonly view: pulumi.Output<string | undefined>;

    /**
     * Create a MXRecord resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MXRecordArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MXRecordArgs | MXRecordState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state: MXRecordState = argsOrState as MXRecordState | undefined;
            inputs["comment"] = state ? state.comment : undefined;
            inputs["ddnsPrincipal"] = state ? state.ddnsPrincipal : undefined;
            inputs["ddnsProtected"] = state ? state.ddnsProtected : undefined;
            inputs["disable"] = state ? state.disable : undefined;
            inputs["mailExchanger"] = state ? state.mailExchanger : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["preference"] = state ? state.preference : undefined;
            inputs["ttl"] = state ? state.ttl : undefined;
            inputs["useTtl"] = state ? state.useTtl : undefined;
            inputs["view"] = state ? state.view : undefined;
        } else {
            const args = argsOrState as MXRecordArgs | undefined;
            if (!args || args.mailExchanger === undefined) {
                throw new Error("Missing required property 'mailExchanger'");
            }
            if (!args || args.preference === undefined) {
                throw new Error("Missing required property 'preference'");
            }
            inputs["comment"] = args ? args.comment : undefined;
            inputs["ddnsPrincipal"] = args ? args.ddnsPrincipal : undefined;
            inputs["ddnsProtected"] = args ? args.ddnsProtected : undefined;
            inputs["disable"] = args ? args.disable : undefined;
            inputs["mailExchanger"] = args ? args.mailExchanger : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["preference"] = args ? args.preference : undefined;
            inputs["ttl"] = args ? args.ttl : undefined;
            inputs["useTtl"] = args ? args.useTtl : undefined;
            inputs["view"] = args ? args.view : undefined;
        }
        super("infoblox:index/mXRecord:MXRecord", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MXRecord resources.
 */
export interface MXRecordState {
    /**
     * A comment on the record
     */
    readonly comment?: pulumi.Input<string>;
    /**
     * The GSS-TSIG principal that owns this record
     */
    readonly ddnsPrincipal?: pulumi.Input<string>;
    /**
     * Determines if the DDNS updates for this record are allowed or not
     */
    readonly ddnsProtected?: pulumi.Input<boolean>;
    /**
     * Is the record disabled
     */
    readonly disable?: pulumi.Input<boolean>;
    /**
     * Mail exchanger name in FQDN format. This value can be in unicode format
     */
    readonly mailExchanger?: pulumi.Input<string>;
    /**
     * Name of the zone the MX record refers to
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Preference value, 0 to 65535 (inclusive) in 32-bit unsigned integer format
     */
    readonly preference?: pulumi.Input<number>;
    /**
     * The Time To Live value for record. A 32-bit unsigned integer that represents the duration, in seconds, for which the
     * record is valid
     */
    readonly ttl?: pulumi.Input<number>;
    /**
     * Use flag for: ttl
     */
    readonly useTtl?: pulumi.Input<boolean>;
    /**
     * The name of the DNS view in which the record resides.
     */
    readonly view?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a MXRecord resource.
 */
export interface MXRecordArgs {
    /**
     * A comment on the record
     */
    readonly comment?: pulumi.Input<string>;
    /**
     * The GSS-TSIG principal that owns this record
     */
    readonly ddnsPrincipal?: pulumi.Input<string>;
    /**
     * Determines if the DDNS updates for this record are allowed or not
     */
    readonly ddnsProtected?: pulumi.Input<boolean>;
    /**
     * Is the record disabled
     */
    readonly disable?: pulumi.Input<boolean>;
    /**
     * Mail exchanger name in FQDN format. This value can be in unicode format
     */
    readonly mailExchanger: pulumi.Input<string>;
    /**
     * Name of the zone the MX record refers to
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Preference value, 0 to 65535 (inclusive) in 32-bit unsigned integer format
     */
    readonly preference: pulumi.Input<number>;
    /**
     * The Time To Live value for record. A 32-bit unsigned integer that represents the duration, in seconds, for which the
     * record is valid
     */
    readonly ttl?: pulumi.Input<number>;
    /**
     * Use flag for: ttl
     */
    readonly useTtl?: pulumi.Input<boolean>;
    /**
     * The name of the DNS view in which the record resides.
     */
    readonly view?: pulumi.Input<string>;
}
