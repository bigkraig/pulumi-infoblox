// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Permission extends pulumi.CustomResource {
    /**
     * Get an existing Permission resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PermissionState, opts?: pulumi.CustomResourceOptions): Permission {
        return new Permission(name, <any>state, { ...opts, id: id });
    }

    /**
     * The name of the admin group this permission applies to.
     */
    public readonly group: pulumi.Output<string | undefined>;
    /**
     * A reference to a WAPI object, which will be the object this permission applies to.
     */
    public readonly object: pulumi.Output<string>;
    /**
     * The type of permission.
     */
    public readonly permission: pulumi.Output<string>;
    /**
     * The type of resource this permission applies to.
     */
    public readonly resourceType: pulumi.Output<string | undefined>;
    /**
     * The name of the role this permission applies to.
     */
    public readonly role: pulumi.Output<string | undefined>;

    /**
     * Create a Permission resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PermissionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PermissionArgs | PermissionState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state: PermissionState = argsOrState as PermissionState | undefined;
            inputs["group"] = state ? state.group : undefined;
            inputs["object"] = state ? state.object : undefined;
            inputs["permission"] = state ? state.permission : undefined;
            inputs["resourceType"] = state ? state.resourceType : undefined;
            inputs["role"] = state ? state.role : undefined;
        } else {
            const args = argsOrState as PermissionArgs | undefined;
            if (!args || args.permission === undefined) {
                throw new Error("Missing required property 'permission'");
            }
            inputs["group"] = args ? args.group : undefined;
            inputs["object"] = args ? args.object : undefined;
            inputs["permission"] = args ? args.permission : undefined;
            inputs["resourceType"] = args ? args.resourceType : undefined;
            inputs["role"] = args ? args.role : undefined;
        }
        super("infoblox:index/permission:Permission", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Permission resources.
 */
export interface PermissionState {
    /**
     * The name of the admin group this permission applies to.
     */
    readonly group?: pulumi.Input<string>;
    /**
     * A reference to a WAPI object, which will be the object this permission applies to.
     */
    readonly object?: pulumi.Input<string>;
    /**
     * The type of permission.
     */
    readonly permission?: pulumi.Input<string>;
    /**
     * The type of resource this permission applies to.
     */
    readonly resourceType?: pulumi.Input<string>;
    /**
     * The name of the role this permission applies to.
     */
    readonly role?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Permission resource.
 */
export interface PermissionArgs {
    /**
     * The name of the admin group this permission applies to.
     */
    readonly group?: pulumi.Input<string>;
    /**
     * A reference to a WAPI object, which will be the object this permission applies to.
     */
    readonly object?: pulumi.Input<string>;
    /**
     * The type of permission.
     */
    readonly permission: pulumi.Input<string>;
    /**
     * The type of resource this permission applies to.
     */
    readonly resourceType?: pulumi.Input<string>;
    /**
     * The name of the role this permission applies to.
     */
    readonly role?: pulumi.Input<string>;
}
