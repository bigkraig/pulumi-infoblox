// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The provider type for the infoblox package. By default, resources use package-wide configuration
 * settings, however an explicit `Provider` instance may be created and passed during resource
 * construction to achieve fine-grained programmatic control over provider settings. See the
 * [documentation](https://pulumi.io/reference/programming-model.html#providers) for more information.
 */
export class Provider extends pulumi.ProviderResource {

    /**
     * Create a Provider resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ProviderArgs, opts?: pulumi.ResourceOptions) {
        let inputs: pulumi.Inputs = {};
        {
            inputs["allowUnverifiedSsl"] = pulumi.output((args ? args.allowUnverifiedSsl : undefined) || utilities.getEnvBoolean("INFOBLOX_ALLOW_UNVERIFIED_SSL")).apply(JSON.stringify);
            inputs["clientDebug"] = pulumi.output((args ? args.clientDebug : undefined) || utilities.getEnvBoolean("INFOBLOX_CLIENT_DEBUG")).apply(JSON.stringify);
            inputs["password"] = (args ? args.password : undefined) || utilities.getEnv("INFOBLOX_PASSWORD");
            inputs["server"] = (args ? args.server : undefined) || utilities.getEnv("INFOBLOX_SERVER");
            inputs["timeout"] = pulumi.output((args ? args.timeout : undefined) || utilities.getEnvNumber("INFOBLOX_CLIENT_TIMEOUT")).apply(JSON.stringify);
            inputs["username"] = (args ? args.username : undefined) || utilities.getEnv("INFOBLOX_USERNAME");
            inputs["wapiVersion"] = (args ? args.wapiVersion : undefined) || utilities.getEnv("INFOBLOX_WAPI_VERSION");
        }
        super("infoblox", name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a Provider resource.
 */
export interface ProviderArgs {
    /**
     * If set, Infoblox client will permit unverifiable SSL certificates.
     */
    readonly allowUnverifiedSsl?: pulumi.Input<boolean>;
    /**
     * infoblox client debug
     */
    readonly clientDebug?: pulumi.Input<boolean>;
    /**
     * Password to authenticate with Infoblox appliance
     */
    readonly password?: pulumi.Input<string>;
    /**
     * Infoblox appliance to connect to eg https://192.168.0.1
     */
    readonly server?: pulumi.Input<string>;
    /**
     * http response timeout, in seconds
     */
    readonly timeout?: pulumi.Input<number>;
    /**
     * User to authenticate with Infoblox appliance
     */
    readonly username?: pulumi.Input<string>;
    /**
     * Infoblox WAPI server version, defaults to v2.6.1
     */
    readonly wapiVersion?: pulumi.Input<string>;
}
