// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package infoblox

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type AdminRole struct {
	s *pulumi.ResourceState
}

// NewAdminRole registers a new resource with the given unique name, arguments, and options.
func NewAdminRole(ctx *pulumi.Context,
	name string, args *AdminRoleArgs, opts ...pulumi.ResourceOpt) (*AdminRole, error) {
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["comment"] = nil
		inputs["disable"] = nil
		inputs["name"] = nil
	} else {
		inputs["comment"] = args.Comment
		inputs["disable"] = args.Disable
		inputs["name"] = args.Name
	}
	s, err := ctx.RegisterResource("infoblox:index/adminRole:AdminRole", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &AdminRole{s: s}, nil
}

// GetAdminRole gets an existing AdminRole resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAdminRole(ctx *pulumi.Context,
	name string, id pulumi.ID, state *AdminRoleState, opts ...pulumi.ResourceOpt) (*AdminRole, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["comment"] = state.Comment
		inputs["disable"] = state.Disable
		inputs["name"] = state.Name
	}
	s, err := ctx.ReadResource("infoblox:index/adminRole:AdminRole", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &AdminRole{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *AdminRole) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *AdminRole) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// The descriptive comment of the Admin Role object.
func (r *AdminRole) Comment() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["comment"])
}

func (r *AdminRole) Disable() *pulumi.BoolOutput {
	return (*pulumi.BoolOutput)(r.s.State["disable"])
}

// The name of an admin role.
func (r *AdminRole) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// Input properties used for looking up and filtering AdminRole resources.
type AdminRoleState struct {
	// The descriptive comment of the Admin Role object.
	Comment interface{}
	Disable interface{}
	// The name of an admin role.
	Name interface{}
}

// The set of arguments for constructing a AdminRole resource.
type AdminRoleArgs struct {
	// The descriptive comment of the Admin Role object.
	Comment interface{}
	Disable interface{}
	// The name of an admin role.
	Name interface{}
}
