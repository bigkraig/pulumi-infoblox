// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package infoblox

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type ZoneStub struct {
	s *pulumi.ResourceState
}

// NewZoneStub registers a new resource with the given unique name, arguments, and options.
func NewZoneStub(ctx *pulumi.Context,
	name string, args *ZoneStubArgs, opts ...pulumi.ResourceOpt) (*ZoneStub, error) {
	if args == nil || args.Fqdn == nil {
		return nil, errors.New("missing required argument 'Fqdn'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["comment"] = nil
		inputs["disable"] = nil
		inputs["disableForwarding"] = nil
		inputs["externalNsgroup"] = nil
		inputs["fqdn"] = nil
		inputs["locked"] = nil
		inputs["maskPrefix"] = nil
		inputs["nsgroup"] = nil
		inputs["prefix"] = nil
		inputs["stubFroms"] = nil
		inputs["stubMembers"] = nil
		inputs["view"] = nil
		inputs["zoneFormat"] = nil
	} else {
		inputs["comment"] = args.Comment
		inputs["disable"] = args.Disable
		inputs["disableForwarding"] = args.DisableForwarding
		inputs["externalNsgroup"] = args.ExternalNsgroup
		inputs["fqdn"] = args.Fqdn
		inputs["locked"] = args.Locked
		inputs["maskPrefix"] = args.MaskPrefix
		inputs["nsgroup"] = args.Nsgroup
		inputs["prefix"] = args.Prefix
		inputs["stubFroms"] = args.StubFroms
		inputs["stubMembers"] = args.StubMembers
		inputs["view"] = args.View
		inputs["zoneFormat"] = args.ZoneFormat
	}
	s, err := ctx.RegisterResource("infoblox:index/zoneStub:ZoneStub", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &ZoneStub{s: s}, nil
}

// GetZoneStub gets an existing ZoneStub resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetZoneStub(ctx *pulumi.Context,
	name string, id pulumi.ID, state *ZoneStubState, opts ...pulumi.ResourceOpt) (*ZoneStub, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["comment"] = state.Comment
		inputs["disable"] = state.Disable
		inputs["disableForwarding"] = state.DisableForwarding
		inputs["externalNsgroup"] = state.ExternalNsgroup
		inputs["fqdn"] = state.Fqdn
		inputs["locked"] = state.Locked
		inputs["maskPrefix"] = state.MaskPrefix
		inputs["nsgroup"] = state.Nsgroup
		inputs["prefix"] = state.Prefix
		inputs["stubFroms"] = state.StubFroms
		inputs["stubMembers"] = state.StubMembers
		inputs["view"] = state.View
		inputs["zoneFormat"] = state.ZoneFormat
	}
	s, err := ctx.ReadResource("infoblox:index/zoneStub:ZoneStub", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &ZoneStub{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *ZoneStub) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *ZoneStub) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// Comment for the zone; maximum 256 characters
func (r *ZoneStub) Comment() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["comment"])
}

// Is the zone disabled
func (r *ZoneStub) Disable() *pulumi.BoolOutput {
	return (*pulumi.BoolOutput)(r.s.State["disable"])
}

// Is forward disabled for this zone
func (r *ZoneStub) DisableForwarding() *pulumi.BoolOutput {
	return (*pulumi.BoolOutput)(r.s.State["disableForwarding"])
}

// Name of the external name server group
func (r *ZoneStub) ExternalNsgroup() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["externalNsgroup"])
}

// Fqdn for the zone
func (r *ZoneStub) Fqdn() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["fqdn"])
}

// Is the record locked to prevent changes
func (r *ZoneStub) Locked() *pulumi.BoolOutput {
	return (*pulumi.BoolOutput)(r.s.State["locked"])
}

// IPv4 Netmask or IPv6 prefix for this zone.
func (r *ZoneStub) MaskPrefix() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["maskPrefix"])
}

// Name of the name server group
func (r *ZoneStub) Nsgroup() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["nsgroup"])
}

// IPv4 Netmask or IPv6 prefix for this zone.
func (r *ZoneStub) Prefix() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["prefix"])
}

// The primary preference list with Grid member names and/or External Server structs for this member.
func (r *ZoneStub) StubFroms() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["stubFroms"])
}

// The grid primary servers for this zone.
func (r *ZoneStub) StubMembers() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["stubMembers"])
}

// The name of the DNS view in which the zone resides
func (r *ZoneStub) View() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["view"])
}

// Determines the format of this zone - API default FORWARD
func (r *ZoneStub) ZoneFormat() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["zoneFormat"])
}

// Input properties used for looking up and filtering ZoneStub resources.
type ZoneStubState struct {
	// Comment for the zone; maximum 256 characters
	Comment interface{}
	// Is the zone disabled
	Disable interface{}
	// Is forward disabled for this zone
	DisableForwarding interface{}
	// Name of the external name server group
	ExternalNsgroup interface{}
	// Fqdn for the zone
	Fqdn interface{}
	// Is the record locked to prevent changes
	Locked interface{}
	// IPv4 Netmask or IPv6 prefix for this zone.
	MaskPrefix interface{}
	// Name of the name server group
	Nsgroup interface{}
	// IPv4 Netmask or IPv6 prefix for this zone.
	Prefix interface{}
	// The primary preference list with Grid member names and/or External Server structs for this member.
	StubFroms interface{}
	// The grid primary servers for this zone.
	StubMembers interface{}
	// The name of the DNS view in which the zone resides
	View interface{}
	// Determines the format of this zone - API default FORWARD
	ZoneFormat interface{}
}

// The set of arguments for constructing a ZoneStub resource.
type ZoneStubArgs struct {
	// Comment for the zone; maximum 256 characters
	Comment interface{}
	// Is the zone disabled
	Disable interface{}
	// Is forward disabled for this zone
	DisableForwarding interface{}
	// Name of the external name server group
	ExternalNsgroup interface{}
	// Fqdn for the zone
	Fqdn interface{}
	// Is the record locked to prevent changes
	Locked interface{}
	// IPv4 Netmask or IPv6 prefix for this zone.
	MaskPrefix interface{}
	// Name of the name server group
	Nsgroup interface{}
	// IPv4 Netmask or IPv6 prefix for this zone.
	Prefix interface{}
	// The primary preference list with Grid member names and/or External Server structs for this member.
	StubFroms interface{}
	// The grid primary servers for this zone.
	StubMembers interface{}
	// The name of the DNS view in which the zone resides
	View interface{}
	// Determines the format of this zone - API default FORWARD
	ZoneFormat interface{}
}
