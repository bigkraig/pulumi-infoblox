// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package infoblox

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type NSGroupStub struct {
	s *pulumi.ResourceState
}

// NewNSGroupStub registers a new resource with the given unique name, arguments, and options.
func NewNSGroupStub(ctx *pulumi.Context,
	name string, args *NSGroupStubArgs, opts ...pulumi.ResourceOpt) (*NSGroupStub, error) {
	if args == nil || args.StubMembers == nil {
		return nil, errors.New("missing required argument 'StubMembers'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["comment"] = nil
		inputs["name"] = nil
		inputs["stubMembers"] = nil
	} else {
		inputs["comment"] = args.Comment
		inputs["name"] = args.Name
		inputs["stubMembers"] = args.StubMembers
	}
	s, err := ctx.RegisterResource("infoblox:index/nSGroupStub:NSGroupStub", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &NSGroupStub{s: s}, nil
}

// GetNSGroupStub gets an existing NSGroupStub resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNSGroupStub(ctx *pulumi.Context,
	name string, id pulumi.ID, state *NSGroupStubState, opts ...pulumi.ResourceOpt) (*NSGroupStub, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["comment"] = state.Comment
		inputs["name"] = state.Name
		inputs["stubMembers"] = state.StubMembers
	}
	s, err := ctx.ReadResource("infoblox:index/nSGroupStub:NSGroupStub", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &NSGroupStub{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *NSGroupStub) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *NSGroupStub) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// Comment field
func (r *NSGroupStub) Comment() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["comment"])
}

// The name of the name server group
func (r *NSGroupStub) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// The grid primary servers for this zone.
func (r *NSGroupStub) StubMembers() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["stubMembers"])
}

// Input properties used for looking up and filtering NSGroupStub resources.
type NSGroupStubState struct {
	// Comment field
	Comment interface{}
	// The name of the name server group
	Name interface{}
	// The grid primary servers for this zone.
	StubMembers interface{}
}

// The set of arguments for constructing a NSGroupStub resource.
type NSGroupStubArgs struct {
	// Comment field
	Comment interface{}
	// The name of the name server group
	Name interface{}
	// The grid primary servers for this zone.
	StubMembers interface{}
}
